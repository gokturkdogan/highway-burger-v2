generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String?
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  orders       Order[]
  addresses    Address[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String    @unique
  image     String?
  createdAt DateTime  @default(now())
  products  Product[]
}

model Product {
  id           Int         @id @default(autoincrement())
  name         String
  slug         String      @unique
  description  String
  price        Float
  secondPrice  Float?      // Ekstra seçenek fiyatı (opsiyonel)
  extraText    String?     // Ekstra açıklama (110/180gr, +patates vb.)
  imageUrl     String?
  categoryId   Int
  createdAt    DateTime    @default(now())
  orderItems   OrderItem[]
  category     Category    @relation(fields: [categoryId], references: [id])
}

model Coupon {
  id              Int      @id @default(autoincrement())
  code            String   @unique
  discountPercent Float
  isActive        Boolean  @default(true)
  expiresAt       DateTime
}

model Order {
  id            Int         @id @default(autoincrement())
  userId        Int?
  total         Float
  discount      Float       @default(0)
  status        String      @default("pending")
  paymentMethod String?     // Kapıda Nakit, Kapıda Kredi Kartı, Online Kredi Kartı
  createdAt     DateTime    @default(now())
  user          User?       @relation(fields: [userId], references: [id])
  items         OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Address {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String   // Ev, İş, vb.
  fullName    String
  phone       String
  city        String
  district    String
  fullAddress String
  latitude    Float?   // Harita konumu
  longitude   Float?   // Harita konumu
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}
